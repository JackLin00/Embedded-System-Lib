#ifndef __FILECLASS_H__
#define __FILECLASS_H__

#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>



typedef enum FileFlag{
    READ_FLAG =  O_RDONLY,                     //读标志位
    WRITE_FLAG = O_WRONLY,                     //写标志位
    READ_WRITE_FLAG = O_RDWR,                //读写标志位
    CREATE_FLAG = O_CREAT,                    //创建标志位
    APPEND_FLAG = O_APPEND,                    //写追加标志位
    TRUNC_FLAG = O_TRUNC,                     //截断标志位
    EXCL_FLAG = O_EXCL,                      //文件是否存在标志位
    NONBLOCK_FLAG = O_NONBLOCK,                  //非阻塞模式标志位
}FileFlag;


typedef struct FileClass{
    int (*open)(char *,int);
    int (*read)(int,char *,int);
    int (*write)(int,char *,int);
    int (*close)(int);
}FileClass;



void FileClass_Init(FileClass *target);


/*--------------------------------------------------------------------------------------------------------*/
/*--------------------------------------------------------------------------------------------------------*/
/*---------------------------------------Need modify befor use--------------------------------------------*/
/*--------------------------------------------------------------------------------------------------------*/
/*--------------------------------------------------------------------------------------------------------*/




/*--------------------------------------------------------------------------------------------------------*/
/*--------------------------------------------------------------------------------------------------------*/
/*---------------------------------------Need modify befor use--------------------------------------------*/
/*--------------------------------------------------------------------------------------------------------*/
/*--------------------------------------------------------------------------------------------------------*/


#endif

